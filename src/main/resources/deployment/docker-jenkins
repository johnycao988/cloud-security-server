# create Apache Active Directory (LDAP SERVER) docker container
docker run -d -p 10389:10389 --name ds.server enschede/apache-directory-server

# create Redis Server docker container
docker run -d -p 6379:6379 -v /docker/redis/redis.conf:/usr/local/etc/redis/redis.conf --name redis.server 10.39.101.226:5000/redis redis-server /usr/local/etc/redis/redis.conf

# create Security Server docker-container;
docker run -d -p 8099:8080 --name cloud.security.server  -v /AppConfig/dev/tomcat.conf:/usr/local/tomcat/conf 10.39.101.226:5000/tomcat

 
# JVM Variables
CONFIG.SERVER.AUTH.CODE=AUTHCODE-0001
CONFIG.SERVER.URL=http://10.39.101.226:6069/cloud-config-server/GetConfigFile
CONFIG.SERVER.ROOT.PATH=/AppConfig/dev


#Properties file path in Config Server
/cloud.security.server.properties 
/cloud.security.server.cache.xml
/cloud.security.client.properties ### for security client
#Jenkins 

1. define Propagate environment variables:
  mvn=/var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/Maven3.3.9/bin/mvn
  docker=/var/jenkins_home/tools/org.jenkinsci.plugins.docker.commons.tools.DockerTool/Docker/bin/docker
2. shell script:
$mvn clean
$mvn package 
$docker -H 10.39.101.226:2375 cp $WORKSPACE/target/cloud-config-server.war cloud.config.server:usr/local/tomcat/webapps
$docker -H 10.39.101.226:2375 restart cloud.config.server

#Security client -Filter####
	ClientSecurityFilterService ssf = (ClientSecurityFilterService) ClientSecurityServiceManager
					.getClientSecurityFilterService();

			if (ssf.isInqAuthCodeRequest(request, response))
				return;

			if (!ssf.authenticateUser(request, response)) {

				String loginUrl = ssf.getLoginUrl(request, response);

				res.sendRedirect(loginUrl);

				return;
			} 
			
			String[] ug = { "manager", "admin1" };
			if (!ssf.accessPermmission(request, response, ug)) {
				System.out.println("Not  pass permmissions.");
			} else
				System.out.println("Pass permmissions.");

			chain.doFilter(request, response);





 